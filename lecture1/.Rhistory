ggplot(t2, aes(x = test_x, y = taylor_test_2)) +
geom_line() +
geom_line(y= fun_test_2, color="red")
t2
library('ggplot2')
test_x <- seq(-1,1, length.out = 21)
taylor_1 <- function(x,n) {
f_of_x <- 0
for (i in 0:n) {
f_of_x <- f_of_x + x^i
}
return(f_of_x)
}
taylor_test_1 <- sapply(test_x, taylor_1, 15)
fun_1 <- function(x) {
return(1/(1-x))
}
fun_test_1 <- sapply(test_x, fun_1)
t1 <- data.frame(test_x, taylor_test_1, fun_test_1)
ggplot(t1, aes(x = test_x, y = taylor_test_1)) +
geom_line() +
geom_line(y= fun_test_1, color="red")
taylor_2 <- function(x,n) {
f_of_x <- 0
for (i in 0:n) {
f_of_x <- f_of_x + (x^i)/(factorial(i))
}
return(f_of_x)
}
taylor_test_2 <- sapply(test_x, taylor_2, 15)
fun_2 <- function(x) {
e <- exp(1)
return(e^x)
}
fun_test_2 <- sapply(test_x, fun_2)
t2 <- data.frame(test_x, taylor_test_2, fun_test_2)
ggplot(t2, aes(x = test_x, y = taylor_test_2)) +
geom_line() +
geom_line(y= fun_test_2, color="red")
taylor_3 <- function(x,n) {
f_of_x <- 0
for (i in 0:n) {
f_of_x <- f_of_x + ((-1)^(i+1)) * ((x^i)/i)
}
return(f_of_x)
}
taylor_test_3 <- sapply(test_x, taylor_3, 15)
fun_3 <- function(x) {
e <- exp(1)
return(e^x)
}
fun_test_3 <- sapply(test_x, fun_3)
t3 <- data.frame(test_x, taylor_test_3, fun_test_3)
ggplot(t3, aes(x = test_x, y = taylor_test_3)) +
geom_line() +
geom_line(y= fun_test_3, color="red")
t3
taylor_3(1,0)
taylor_3(1,1)
library('ggplot2')
test_x <- seq(-1,1, length.out = 21)
taylor_1 <- function(x,n) {
f_of_x <- 0
for (i in 0:n) {
f_of_x <- f_of_x + x^i
}
return(f_of_x)
}
taylor_test_1 <- sapply(test_x, taylor_1, 15)
fun_1 <- function(x) {
return(1/(1-x))
}
fun_test_1 <- sapply(test_x, fun_1)
t1 <- data.frame(test_x, taylor_test_1, fun_test_1)
ggplot(t1, aes(x = test_x, y = taylor_test_1)) +
geom_line() +
geom_line(y= fun_test_1, color="red")
taylor_2 <- function(x,n) {
f_of_x <- 0
for (i in 0:n) {
f_of_x <- f_of_x + (x^i)/(factorial(i))
}
return(f_of_x)
}
taylor_test_2 <- sapply(test_x, taylor_2, 15)
fun_2 <- function(x) {
e <- exp(1)
return(e^x)
}
fun_test_2 <- sapply(test_x, fun_2)
t2 <- data.frame(test_x, taylor_test_2, fun_test_2)
ggplot(t2, aes(x = test_x, y = taylor_test_2)) +
geom_line() +
geom_line(y= fun_test_2, color="red")
taylor_3 <- function(x,n) {
f_of_x <- 0
for (i in 0:n) {
f_of_x <- f_of_x + ((-1)^(i+1)) * ((x^i)/i)
}
return(f_of_x)
}
taylor_test_3 <- sapply(test_x, taylor_3, 15)
fun_3 <- function(x) {
return(log((1+x)))
}
fun_test_3 <- sapply(test_x, fun_3)
t3 <- data.frame(test_x, taylor_test_3, fun_test_3)
ggplot(t3, aes(x = test_x, y = taylor_test_3)) +
geom_line() +
geom_line(y= fun_test_3, color="red")
t3
library('ggplot2')
test_x <- seq(-1,1, length.out = 21)
taylor_1 <- function(x,n) {
f_of_x <- 0
for (i in 0:n) {
f_of_x <- f_of_x + x^i
}
return(f_of_x)
}
taylor_test_1 <- sapply(test_x, taylor_1, 15)
fun_1 <- function(x) {
return(1/(1-x))
}
fun_test_1 <- sapply(test_x, fun_1)
t1 <- data.frame(test_x, taylor_test_1, fun_test_1)
ggplot(t1, aes(x = test_x, y = taylor_test_1)) +
geom_line() +
geom_line(y= fun_test_1, color="red")
taylor_2 <- function(x,n) {
f_of_x <- 0
for (i in 0:n) {
f_of_x <- f_of_x + (x^i)/(factorial(i))
}
return(f_of_x)
}
taylor_test_2 <- sapply(test_x, taylor_2, 15)
fun_2 <- function(x) {
e <- exp(1)
return(e^x)
}
fun_test_2 <- sapply(test_x, fun_2)
t2 <- data.frame(test_x, taylor_test_2, fun_test_2)
ggplot(t2, aes(x = test_x, y = taylor_test_2)) +
geom_line() +
geom_line(y= fun_test_2, color="red")
taylor_3 <- function(x,n) {
f_of_x <- 0
for (i in (0.000001):n) {
f_of_x <- f_of_x + ((-1)^(i+1)) * ((x^i)/i)
}
return(f_of_x)
}
taylor_test_3 <- sapply(test_x, taylor_3, 15)
fun_3 <- function(x) {
return(log((1+x)))
}
fun_test_3 <- sapply(test_x, fun_3)
t3 <- data.frame(test_x, taylor_test_3, fun_test_3)
ggplot(t3, aes(x = test_x, y = taylor_test_3)) +
geom_line() +
geom_line(y= fun_test_3, color="red")
t3
taylor_3(0,0)
taylor_3(0,1)
taylor_3(0,2
)
download.packages('pracma')
install.packages('pracma')
taylor(fun_3, 0, 5)
library(pracma)
taylor(fun_3, 0, 5)
taylor(fun_3, 0, 20)
taylor(fun_3, 1, 20)
taylor(fun_3, 2, 20)
taylor(fun_3, 0, 20)
taylor(fun_3, 0.01, 20)
t3
help(taylor)
taylor(fun_3, 0)
taylor(fun_3, .01)
taylor(fun_3, .02)
taylor(fun_3, 0)
library('ggplot2')
test_x <- seq(-1,1, length.out = 21)
taylor_1 <- function(x,n) {
f_of_x <- 0
for (i in 0:n) {
f_of_x <- f_of_x + x^i
}
return(f_of_x)
}
taylor_test_1 <- sapply(test_x, taylor_1, 15)
fun_1 <- function(x) {
return(1/(1-x))
}
fun_test_1 <- sapply(test_x, fun_1)
t1 <- data.frame(test_x, taylor_test_1, fun_test_1)
ggplot(t1, aes(x = test_x, y = taylor_test_1)) +
geom_line() +
geom_line(y= fun_test_1, color="red")
taylor_2 <- function(x,n) {
f_of_x <- 0
for (i in 0:n) {
f_of_x <- f_of_x + (x^i)/(factorial(i))
}
return(f_of_x)
}
taylor_test_2 <- sapply(test_x, taylor_2, 15)
fun_2 <- function(x) {
e <- exp(1)
return(e^x)
}
fun_test_2 <- sapply(test_x, fun_2)
t2 <- data.frame(test_x, taylor_test_2, fun_test_2)
ggplot(t2, aes(x = test_x, y = taylor_test_2)) +
geom_line() +
geom_line(y= fun_test_2, color="red")
fun_3 <- function(x) {
return(log((1+x)))
}
taylor3_polys <- taylor(fun_3, 0)
taylor_3 <- polyval(taylor3_polys, x_test)
library('ggplot2')
test_x <- seq(-1,1, length.out = 21)
taylor_1 <- function(x,n) {
f_of_x <- 0
for (i in 0:n) {
f_of_x <- f_of_x + x^i
}
return(f_of_x)
}
taylor_test_1 <- sapply(test_x, taylor_1, 15)
fun_1 <- function(x) {
return(1/(1-x))
}
fun_test_1 <- sapply(test_x, fun_1)
t1 <- data.frame(test_x, taylor_test_1, fun_test_1)
ggplot(t1, aes(x = test_x, y = taylor_test_1)) +
geom_line() +
geom_line(y= fun_test_1, color="red")
taylor_2 <- function(x,n) {
f_of_x <- 0
for (i in 0:n) {
f_of_x <- f_of_x + (x^i)/(factorial(i))
}
return(f_of_x)
}
taylor_test_2 <- sapply(test_x, taylor_2, 15)
fun_2 <- function(x) {
e <- exp(1)
return(e^x)
}
fun_test_2 <- sapply(test_x, fun_2)
t2 <- data.frame(test_x, taylor_test_2, fun_test_2)
ggplot(t2, aes(x = test_x, y = taylor_test_2)) +
geom_line() +
geom_line(y= fun_test_2, color="red")
fun_3 <- function(x) {
return(log((1+x)))
}
taylor3_polys <- taylor(fun_3, 0)
taylor_3 <- polyval(taylor3_polys, test_x)
test_x
taylor_3
fun_test_3 <- sapply(test_x, fun_3)
fun_test_3
plot(test_x, fun_test_3)
plot(test_x, taylor_3)
points(test_x, fun_3)
length(test_x)
length(fun_test_3)
points(test_x, fun_test_3)
t3 <- data.frame(test_x, taylor_3, fun_test_3)
t3
ggplot(t2, aes(x = test_x, y = taylor_3)) +
geom_line() +
geom_line(y= fun_test_3, color="red")
v1 <- c(1/2,1/2,1/2,1/2)
v1
sqrt(sum(v1^2))
v2 <- c(-1/2,1/2,1/2,-1/2)
v3 <- c(1/2,-1/2,1/2,-1/2)
v1 <- c(1/2,1/2,1/2,1/2)
v2 <- c(-1/2,1/2,1/2,-1/2)
v3 <- c(1/2,-1/2,1/2,-1/2)
sqrt(sum(v1^2))
sqrt(sum(v2^2))
sqrt(sum(v3^2))
sum(v1*v2)
sum(v1*v3)
sum(v2*v3)
R.version()
R.version
updateR()
updateR
install.package('caret')
install.packages('caret')
?confusionMatrix()
library(caret)
?confusionMatrix()
install.packages('rticles')
install.packages('knitr')
setwd("~/Data Science/Fall 2016/DATA608 Visual Analytics/CUNY_IS608-master/lecture1")
library(ggplot2)
library(plyr)
library(ggplot2)
library(plyr)
library(ggplot2)
library(plyr)
library(ggplot2)
library(plyr)
data <- read.csv('data/inc5000_data.csv')
head(data)
summary(data$Revenue)
table(data$State)
?ddply
ddply(data)
ddply(data, State)
ddply(data, data$State)
?group_by
?group_by()
library(plyr)
library(dplyr)
group_by(data, State)
?group_by
summarise(group_by(data, State))
summarise(group_by(data, State), state_count = count(data, State))
count(data$State)
?sumamrise()
?summarise
data %>% group_by(State)
data %>% group_by(State) %>% summarise()
data %>% group_by(State) %>% summarise(state.count = count(State))
count(data, State)
state_summmary <- count(data, State)
ggplot(data=state_summary, aes(x=State,y=n))
state_summary <- count(data, State)
ggplot(data=state_summary, aes(x=State,y=n))
ggplot(data=state_summary, aes(x=n,y=State))
ggplot(data=state_summary, aes(x=n,y=State, fill=factor(Type)))
ggplot(data=state_summary, aes(x=n,y=State))
ggplot(data=state_summary, aes(x=n,y=State)) + geom_bar()
?geom_bar()
ggplot(data=state_summary, aes(x=n,y=State)) + geom_bar(stat="identity")
ggplot(data=state_summary, aes(x=n,y=State)) + geom_bar()
ggplot(data=data, aes(x=State)) + geom_bar()
?geom_bar
ggplot(data=data, aes(x=State)) + geom_bar() +coord_flip()
ggplot(data=state_summary, aes(x=State)) + geom_bar(stat="identity") +coord_flip()
ggplot(data=state_summary, aes(x=State, y=n)) + geom_bar(stat="identity") +coord_flip()
ggplot(data=state_summary, aes(x=State, y=n)) + geom_bar(stat="identity", width=0.4)
+ coord_flip()
ggplot(data=state_summary, aes(x=State, y=n)) + geom_bar(stat="identity", width=0.4) + coord_flip()
ggplot(data=state_summary, aes(x=State, y=n)) + geom_bar(stat="identity", width=1) + coord_flip()
ggplot(data=state_summary, aes(x=State, y=n)) + geom_bar(stat="identity", width=1, position = position_dodge(width=1)) + coord_flip()
ggplot(data=state_summary, aes(x=State, y=n)) + geom_bar(stat="identity", width=1, position = position_dodge(width=1)) + coord_flip()
ggplot(data=state_summary, aes(x=State, y=n)) + geom_bar(stat="identity", width=1, position = position_dodge(width=1)) + coord_flip()
arrange(state_summary, n)
arrange(state_summary, desc(n)
)
library(ggplot2)
library(dplyr)
data <- read.csv('data/inc5000_data.csv')
state_summary <- count(data, State)
state_summary <- arrange(state_summary, desc(n))
ggplot(data=data, aes(x=State)) + geom_bar() +coord_flip()
ggplot(data=state_summary, aes(x=State, y=n)) + geom_bar(stat="identity", width=1, position = position_dodge(width=1)) + coord_flip()
ggplot(data=state_summary, aes(x=State, y=n)) + geom_bar(stat="identity", width=1, position = position_dodge(width=1)) + coord_flip()
data <- read.csv('data/inc5000_data.csv')
state_summary <- count(data, State)
state_summary <- arrange(state_summary, desc(n))
ggplot(data=state_summary, aes(x=State, y=n)) + geom_bar(stat="identity", width=1, position = position_dodge(width=1)) + coord_flip()
state_summary
library(ggplot2)
library(dplyr)
data <- read.csv('data/inc5000_data.csv')
state_summary <- count(data, State)
state_summary <- arrange(state_summary, desc(n))
#ggplot(data=data, aes(x=State)) + geom_bar() +coord_flip()
ggplot(data=state_summary, aes(x=State, y=n)) + geom_bar(stat="identity", width=1, position = position_dodge(width=1)) + coord_flip()
ggplot(data=state_summary, aes(reorder(State,n), y=n)) + geom_bar(stat="identity", width=1, position = position_dodge(width=1)) + coord_flip()
ggplot(data=state_summary, aes(x = reorder(State,n), y=n)) +
geom_bar(stat="identity", width=1, position = position_dodge(width=1)) +
coord_flip()
ggplot(data=state_summary, aes(x = reorder(State,n), y=n, width=1)) +
geom_bar(stat="identity", width=1, position = position_dodge(width=1)) +
coord_flip()
ggplot(data=state_summary, aes(x = reorder(State,n), y=n)) +
geom_bar(stat="identity", width=.5, position = position_dodge(width=1)) +
coord_flip()
ggplot(data=state_summary, aes(x = reorder(State,n), y=n, colour = rhg_cols)) +
geom_bar(stat="identity", width=.5, position = position_dodge(width=1)) +
coord_flip()
library(ggplot2)
library(dplyr)
rhg_cols <- c("#771C19", "#AA3929", "#E25033", "#F27314", "#F8A31B",
"#E2C59F", "#B6C5CC", "#8E9CA3", "#556670", "#000000")
data <- read.csv('data/inc5000_data.csv')
state_summary <- count(data, State)
state_summary <- arrange(state_summary, desc(n))
#ggplot(data=data, aes(x=State)) + geom_bar() +coord_flip()
ggplot(data=state_summary, aes(x = reorder(State,n), y=n, colour = rhg_cols)) +
geom_bar(stat="identity", width=.5, position = position_dodge(width=1)) +
coord_flip()
ggplot(data=state_summary, aes(x = reorder(State,n), y=n, colour = "red")) +
geom_bar(stat="identity", width=.5, position = position_dodge(width=1)) +
coord_flip()
ggplot(data=state_summary, aes(x = reorder(State,n), y=n)) +
geom_bar(stat="identity", width=.5, position = position_dodge(width=1)) +
coord_flip()
labs(title="Fastest Growing American Companies by State")
ggplot(data=state_summary, aes(x = reorder(State,n), y=n)) +
geom_bar(stat="identity", width=.5, position = position_dodge(width=1)) +
coord_flip() +
labs(title="Fastest Growing American Companies by State")
ggplot(data=state_summary, aes(x = reorder(State,n), y=n)) +
geom_bar(stat="identity", width=.5, position = position_dodge(width=1)) +
coord_flip() +
labs(title="Fastest Growing American Companies by State", xlab="Count", ylab = NA)
ggplot(data=state_summary, aes(x = reorder(State,n), y=n)) +
geom_bar(stat="identity", width=.5, position = position_dodge(width=1)) +
coord_flip() +
labs(title="Fastest Growing American Companies by State", xlab="Count", ylab = NA)
labs(title="Fastest Growing American Companies by State") + xlab("Count") + ylab("State")
ggplot(data=state_summary, aes(x = reorder(State,n), y=n)) +
geom_bar(stat="identity", width=.5, position = position_dodge(width=1)) +
coord_flip() +
labs(title="Fastest Growing American Companies by State") + xlab("Count") + ylab("State")
ggplot(data=state_summary, aes(x = reorder(State,n), y=n)) +
geom_bar(stat="identity", width=.5, position = position_dodge(width=1)) +
coord_flip() +
labs(title="Fastest Growing American Companies by State") + xlab("State") + ylab("Count")
state_plot <- ggplot(data=state_summary, aes(x = reorder(State,n), y=n)) +
geom_bar(stat="identity", width=.5, position = position_dodge(width=1)) +
coord_flip() +
labs(title="Fastest Growing American Companies by State") + xlab("State") + ylab("Count")
state_plot
state_plot <- ggplot(data=state_summary, aes(x = reorder(State,n), y=n)) +
geom_bar(stat="identity", width=.5, position = position_dodge(width=1)) +
coord_flip() +
labs(title="Fastest Growing American Companies by State") + xlab("State") + ylab("Count") +
theme(axis.ticks.x=element_blank())
state_plot
state_plot <- ggplot(data=state_summary, aes(x = reorder(State,n), y=n)) +
geom_bar(stat="identity", width=.5, position = position_dodge(width=1)) +
coord_flip() +
labs(title="Fastest Growing American Companies by State") + xlab("State") + ylab("Count") +
theme(axis.ticks.y=element_blank())
state_plot
state_plot
state_plot <- ggplot(data=state_summary, aes(x = reorder(State,n), y=n)) +
geom_bar(stat="identity", width=.5, position = position_dodge(width=1)) +
coord_flip() +
labs(title="Fastest Growing American Companies by State") + xlab("State") + ylab("Count") +
theme(axis.ticks.y=element_blank()) +
ylim(0,5000)
state_plot
state_plot <- ggplot(data=state_summary, aes(x = reorder(State,n), y=n)) +
geom_bar(stat="identity", width=.5, position = position_dodge(width=1)) +
coord_flip() +
labs(title="Fastest Growing American Companies by State") + xlab("State") + ylab("Count") +
theme(axis.ticks.y=element_blank()) +
ylim(0)
state_plot <- ggplot(data=state_summary, aes(x = reorder(State,n), y=n)) +
geom_bar(stat="identity", width=.5, position = position_dodge(width=1)) +
coord_flip() +
labs(title="Fastest Growing American Companies by State") + xlab("State") + ylab("Count") +
theme(axis.ticks.y=element_blank())
state_plot
state_plot <- ggplot(data=state_summary, aes(x = reorder(State,n), y=n)) +
geom_bar(stat="identity", width=.5, position = position_dodge(width=1)) +
coord_flip() +
labs(title="Fastest Growing American Companies by State") + xlab("State") + ylab("Count") +
theme(axis.ticks.y=element_blank())
state_plot
ny <- subset(data,State=="NY")
ny <- subset(data,State == "NY")
ny_complete <- complete.cases(ny)
?complete.cases
ny_complete <- complete.cases(ny[,])
table(ny_complete)
ny_complete <- complete.cases(ny[,6])
table(ny_complete)
?filter
?group_by
ny_indus <- group_by(ny_complete, Inustry)
ny_indus <- group_by(ny_complete, Industry)
ny_indus <- group_by(.data=ny_complete, Industry)
ny_indus <- group_by(ny, Industry)
View(ny_indus)
View(ny_indus)
summarize(ny_indus, avg_ee = mean(Employees))
avg_ees <- summarize(ny_indus, avg_ee = mean(Employees))
ny_indus <- group_by(ny, Industry)
ny_avg_ees <- summarize(ny_indus, avg_ee = mean(Employees))
plot(ny_avg_ees)
ny_bp <- ggplot(ny_indus, aes(factor(Industry), Employees))
ny_bb + geom_boxplot()
ny_bp + geom_boxplot()
ny_bp + geom_boxplot()
ny_bp + geom_boxplot() + ylim(0,5000)
ny_bp + geom_boxplot() + ylim(0,2000)
ny_bp + geom_boxplot() + ylim(0,1000)
ny_bp + geom_boxplot() + ylim(0,1000)
?xlab
ny_bp + geom_boxplot() + ylim(0,1000) +scale_x_discret(breaks=NULL)
ny_bp + geom_boxplot() + ylim(0,1000) +scale_x_discrete(breaks=NULL)
ny_bp + geom_boxplot() + ylim(0,1000) + theme(axis.text.x = element_text(angle=90))
ny_bp + geom_boxplot() + ylim(0,1000) + theme(axis.text.x = element_text(angle=90)) +coord_flip()
ny_bp + geom_boxplot() + ylim(0,500) + theme(axis.text.x = element_text(angle=90)) +coord_flip()
ny_bp + geom_boxplot() + ylim(0,250) + theme(axis.text.x = element_text(angle=90)) +coord_flip()
